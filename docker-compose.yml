services:
  ascribe:
    image: registry.sccs.swarthmore.edu/cs77-s25/ascribe/ascribe:latest
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      #Variables we use in the container
      #Nonsensitive ones can go here for dev
      #For prod put in .env file
      NODE_ENV: production
      DOMAIN: https://ascribe.sccs.swarthmore.edu/
      POSTGRES_DB: ascribe_db
      DATABASE_URL: postgresql://postgres:example@ascribe-db:5432/ascribe_db
      #Due to docker networking we can reference the db by its container_name
    env_file:
      - .env
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        - "traefik.http.routers.ascribe.entrypoints=https"
        - "traefik.http.routers.ascribe.rule=Host(`ascribe.sccs.swarthmore.edu`)"
        - "traefik.http.routers.ascribe.tls=true"
        - "traefik.http.routers.ascribe.tls.certresolver=letsEncrypt"
        - "traefik.http.services.ascribe.loadbalancer.server.port=3000"
    networks:
      - traefik
      - internal
    command: sh -c "sleep 5 && npx prisma migrate deploy && npm start"

  ascribe-db:
    image: postgres:16.4-bullseye
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: ascribe_db
    networks:
      - internal
    volumes:
      - pg_data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname lists --username lists"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg_data:

networks:
  internal:
  traefik:
    external: true
